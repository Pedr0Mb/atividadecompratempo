import React, { useState, useEffect } from 'react';
import { View, Text, TouchableOpacity, StyleSheet, Alert } from 'react-native';

const App = () => {
  const [tempoRestante, setTempoRestante] = useState(0);
  const [ativo, setAtivo] = useState(false);
  const [totalGasto, setTotalGasto] = useState(0);
  const [historico, setHistorico] = useState([]);

  useEffect(() => {
    let intervalo = null;
    
    if (ativo && tempoRestante > 0) {
      intervalo = setInterval(() => {
        setTempoRestante((tempoAnterior) => tempoAnterior - 1);
      }, 1000);
    } else if (tempoRestante === 0 && ativo) {
      setAtivo(false);
      Alert.alert(
        'Tempo esgotado!',
        `VocÃª gastou R$ ${totalGasto.toFixed(2)}`,
        [{ text: 'OK' }]
      );
    }
    
    return () => clearInterval(intervalo);
  }, [ativo, tempoRestante, totalGasto]);

  const iniciarTemporizador = (minutos, custo) => {
    setTempoRestante(minutos * 60);
    setAtivo(true);
    setTotalGasto(custo);
    setHistorico([...historico, { minutos, custo }]);
  };

  const iniciarTemporizadorDinamico = () => {
  
    const minutosIniciais = 10;
    setTempoRestante(minutosIniciais * 60);
    setAtivo(true);
  
    let custo = 0;
    for (let i = 1; i <= minutosIniciais; i++) {
      if (i % 10 === 0) {
        custo += 5 * 0.5; // 50% de desconto a cada 10 minutos
      } else {
        custo += 5;
      }
    }
    
    setTotalGasto(custo);
    setHistorico([...historico, { minutos: minutosIniciais, custo }]);
  };

  const formatarTempo = (segundos) => {
    const minutos = Math.floor(segundos / 60);
    const segundosRestantes = segundos % 60;
    return `${minutos.toString().padStart(2, '0')}:${segundosRestantes.toString().padStart(2, '0')}`;
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Comprar Tempo</Text>
      
      <View style={styles.buttonContainer}>
        <TouchableOpacity 
          style={styles.button} 
          onPress={() => iniciarTemporizador(1, 3)}
          disabled={ativo}
        >
          <Text style={styles.buttonText}>R$ 3,00 - 1 minuto</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.button} 
          onPress={() => iniciarTemporizador(2, 5)}
          disabled={ativo}
        >
          <Text style={styles.buttonText}>R$ 5,00 - 2 minutos</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={styles.button} 
          onPress={iniciarTemporizadorDinamico}
          disabled={ativo}
        >
          <Text style={styles.buttonText}>R$ 5,00/min com desconto</Text>
        </TouchableOpacity>
      </View>
      
      <View style={styles.timerContainer}>
        <Text style={styles.timerText}>{formatarTempo(tempoRestante)}</Text>
        <Text style={styles.totalText}>Total gasto: R$ {totalGasto.toFixed(2)}</Text>
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#f5f5f5',
    padding: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: 'bold',
    marginBottom: 30,
  },
  buttonContainer: {
    width: '100%',
    marginBottom: 30,
  },
  button: {
    backgroundColor: '#4285f4',
    padding: 15,
    borderRadius: 8,
    marginBottom: 15,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',
  },
  timerContainer: {
    alignItems: 'center',
    marginTop: 30,